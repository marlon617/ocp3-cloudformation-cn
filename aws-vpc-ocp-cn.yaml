AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This template creates a Multi-AZ, multi-subnet VPC infrastructure with managed
  NAT gateways in the public subnet for each Availability Zone. 
Metadata:
  AZCount:
    Description: 'The secleted AZ must be 3, otherwise nothing will be created.'  
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Availability Zone Configuration
        Parameters:
          - AvailabilityZones
      - Label:
          default: Network Configuration
        Parameters:
          - VPCCIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
          - PublicSubnetTag1
          - PublicSubnetTag2
          - PublicSubnetTag3
          - CreatePrivateSubnets
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PrivateSubnetTag1
          - PrivateSubnetTag2
          - PrivateSubnetTag3
          - VPCTenancy

    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      CreatePrivateSubnets:
        default: Create private subnets
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PrivateSubnetTag1:
        default: Tag for Private Subnets
      PrivateSubnetTag2:
        default: Tag for Private Subnets
      PrivateSubnetTag3:
        default: Tag for Private Subnets
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      PublicSubnetTag1:
        default: Tag for Public Subnets
      PublicSubnetTag2:
        default: Tag for Public Subnets
      PublicSubnetTag3:
        default: Tag for Public Subnets
      VPCCIDR:
        default: VPC CIDR
      VPCTenancy:
        default: VPC Tenancy
Parameters:
  AvailabilityZones:
    Description: >-
      List of Availability Zones to use for the subnets in the VPC. Note: The
      logical order is preserved.
    Type: 'List<AWS::EC2::AvailabilityZone::Name>'
  CreatePrivateSubnets:
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'true'
    Description: >-
      Set to false to create only public subnets. If false, the CIDR parameters
      for ALL private subnets will be ignored.
    Type: String
  PrivateSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PrivateSubnet3CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
    Description: CIDR block for private subnet 3 located in Availability Zone 3
    Type: String
  PrivateSubnetTag1:
    AllowedPattern: '^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"''\[\]\{\}]*)?$'
    ConstraintDescription: >-
      tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: Network=Private
    Description: 'tag to add to private subnets, in format Key=Value (Optional)'
    Type: String
  PrivateSubnetTag2:
    AllowedPattern: '^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"''\[\]\{\}]*)?$'
    ConstraintDescription: >-
      tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: ''
    Description: 'tag to add to private subnets, in format Key=Value (Optional)'
    Type: String
  PrivateSubnetTag3:
    AllowedPattern: '^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"''\[\]\{\}]*)?$'
    ConstraintDescription: >-
      tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: ''
    Description: 'tag to add to private subnets, in format Key=Value (Optional)'
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.128.0/20
    Description: CIDR block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.144.0/20
    Description: CIDR block for the public DMZ subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet3CIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.160.0/20
    Description: CIDR block for the public DMZ subnet 3 located in Availability Zone 3
    Type: String
  PublicSubnetTag1:
    AllowedPattern: '^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"''\[\]\{\}]*)?$'
    ConstraintDescription: >-
      tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: Network=Public
    Description: 'tag to add to public subnets, in format Key=Value (Optional)'
    Type: String
  PublicSubnetTag2:
    AllowedPattern: '^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"''\[\]\{\}]*)?$'
    ConstraintDescription: >-
      tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: ''
    Description: 'tag to add to public subnets, in format Key=Value (Optional)'
    Type: String
  PublicSubnetTag3:
    AllowedPattern: '^([a-zA-Z0-9+\-._:/@]+=[a-zA-Z0-9+\-.,_:/@ *\\"''\[\]\{\}]*)?$'
    ConstraintDescription: >-
      tags must be in format "Key=Value" keys can only contain
      [a-zA-Z0-9+\-._:/@], values can contain [a-zA-Z0-9+\-._:/@ *\\"'\[\]\{\}]
    Default: ''
    Description: 'tag to add to public subnets, in format Key=Value (Optional)'
    Type: String
  VPCCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  VPCTenancy:
    AllowedValues:
      - default
      - dedicated
    Default: default
    Description: The allowed tenancy of instances launched into the VPC
    Type: String
Conditions:
  3AZCondition: !Not
    - !Equals
      - !Select 
          - '2'
          - !Ref AvailabilityZones
      - ''
  GovCloudCondition: !Equals 
    - !Ref 'AWS::Region'
    - us-gov-west-1
  NVirginiaRegionCondition: !Equals 
    - !Ref 'AWS::Region'
    - us-east-1
  PrivateSubnetsCondition: !Equals 
    - !Ref CreatePrivateSubnets
    - 'true'
  PrivateSubnets&3AZCondition: !And 
    - !Condition PrivateSubnetsCondition
    - !Condition 3AZCondition
  PrivateSubnetTag1Condition: !Not 
    - !Equals 
      - !Ref PrivateSubnetTag1
      - ''
  PrivateSubnetTag2Condition: !Not 
    - !Equals 
      - !Ref PrivateSubnetTag2
      - ''
  PrivateSubnetTag3Condition: !Not 
    - !Equals 
      - !Ref PrivateSubnetTag3
      - ''
  PublicSubnetTag1Condition: !Not 
    - !Equals 
      - !Ref PublicSubnetTag1
      - ''
  PublicSubnetTag2Condition: !Not 
    - !Equals 
      - !Ref PublicSubnetTag2
      - ''
  PublicSubnetTag3Condition: !Not 
    - !Equals 
      - !Ref PublicSubnetTag3
      - ''
Resources:
  DHCPOptions:
    Condition: 3AZCondition
    Type: 'AWS::EC2::DHCPOptions'
    Properties:
      DomainName: !If 
        - NVirginiaRegionCondition
        - ec2.internal
        - !Sub '${AWS::Region}.compute.internal'
      DomainNameServers:
        - AmazonProvidedDNS
  VPC:
    Condition: 3AZCondition
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: !Ref VPCCIDR
      InstanceTenancy: !Ref VPCTenancy
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  VPCDHCPOptionsAssociation:
    Condition: 3AZCondition
    Type: 'AWS::EC2::VPCDHCPOptionsAssociation'
    Properties:
      VpcId: !Ref VPC
      DhcpOptionsId: !Ref DHCPOptions
  InternetGateway:
    Condition: 3AZCondition
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: !Ref 'AWS::StackName'
  VPCGatewayAttachment:
    Condition: 3AZCondition
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  PrivateSubnet1:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet1CIDR
      AvailabilityZone: !Select 
        - '0'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Private subnet 1
        - !If 
          - PrivateSubnetTag1Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag1
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag1
          - !Ref 'AWS::NoValue'
        - !If 
          - PrivateSubnetTag2Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag2
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag2
          - !Ref 'AWS::NoValue'
        - !If 
          - PrivateSubnetTag3Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag3
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag3
          - !Ref 'AWS::NoValue'
  PrivateSubnet2:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet2CIDR
      AvailabilityZone: !Select 
        - '1'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Private subnet 2
        - !If 
          - PrivateSubnetTag1Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag1
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag1
          - !Ref 'AWS::NoValue'
        - !If 
          - PrivateSubnetTag2Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag2
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag2
          - !Ref 'AWS::NoValue'
        - !If 
          - PrivateSubnetTag3Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag3
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag3
          - !Ref 'AWS::NoValue'
  PrivateSubnet3:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnet3CIDR
      AvailabilityZone: !Select 
        - '2'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Private subnet 3
        - !If 
          - PrivateSubnetTag1Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag1
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag1
          - !Ref 'AWS::NoValue'
        - !If 
          - PrivateSubnetTag2Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag2
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag2
          - !Ref 'AWS::NoValue'
        - !If 
          - PrivateSubnetTag3Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PrivateSubnetTag3
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PrivateSubnetTag3
          - !Ref 'AWS::NoValue'
  PublicSubnet1:
    Condition: 3AZCondition
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet1CIDR
      AvailabilityZone: !Select 
        - '0'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Public subnet 1
        - !If 
          - PublicSubnetTag1Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag1
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag1
          - !Ref 'AWS::NoValue'
        - !If 
          - PublicSubnetTag2Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag2
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag2
          - !Ref 'AWS::NoValue'
        - !If 
          - PublicSubnetTag3Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag3
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag3
          - !Ref 'AWS::NoValue'
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Condition: 3AZCondition
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet2CIDR
      AvailabilityZone: !Select 
        - '1'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Public subnet 2
        - !If 
          - PublicSubnetTag1Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag1
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag1
          - !Ref 'AWS::NoValue'
        - !If 
          - PublicSubnetTag2Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag2
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag2
          - !Ref 'AWS::NoValue'
        - !If 
          - PublicSubnetTag3Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag3
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag3
          - !Ref 'AWS::NoValue'
      MapPublicIpOnLaunch: true
  PublicSubnet3:
    Condition: 3AZCondition
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PublicSubnet3CIDR
      AvailabilityZone: !Select 
        - '2'
        - !Ref AvailabilityZones
      Tags:
        - Key: Name
          Value: Public subnet 3
        - !If 
          - PublicSubnetTag1Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag1
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag1
          - !Ref 'AWS::NoValue'
        - !If 
          - PublicSubnetTag2Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag2
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag2
          - !Ref 'AWS::NoValue'
        - !If 
          - PublicSubnetTag3Condition
          - Key: !Select 
              - '0'
              - !Split 
                - =
                - !Ref PublicSubnetTag3
            Value: !Select 
              - '1'
              - !Split 
                - =
                - !Ref PublicSubnetTag3
          - !Ref 'AWS::NoValue'
      MapPublicIpOnLaunch: true
  
  PrivateSubnet1RouteTable:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private subnet 1
        - Key: Network
          Value: Private
  PrivateSubnet1Route:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet1RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway1
  PrivateSubnet1RouteTableAssociation:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateSubnet1RouteTable
  PrivateSubnet2RouteTable:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private subnet 2
        - Key: Network
          Value: Private
  PrivateSubnet2Route:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet2RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway2
  PrivateSubnet2RouteTableAssociation:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateSubnet2RouteTable
  PrivateSubnet3RouteTable:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Private subnet 3
        - Key: Network
          Value: Private
  PrivateSubnet3Route:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateSubnet3RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway3
  PrivateSubnet3RouteTableAssociation:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateSubnet3RouteTable
  PublicSubnetRouteTable:
    Condition: 3AZCondition
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Subnets
        - Key: Network
          Value: Public
  PublicSubnetRoute:
    Condition: 3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnet1RouteTableAssociation:
    Condition: 3AZCondition
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicSubnetRouteTable
  PublicSubnet2RouteTableAssociation:
    Condition: 3AZCondition
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicSubnetRouteTable
  PublicSubnet3RouteTableAssociation:
    Condition: 3AZCondition
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicSubnetRouteTable

  NAT1EIP:
    Condition: PrivateSubnets&3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NAT2EIP:
    Condition: PrivateSubnets&3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
  NAT3EIP:
    Condition: PrivateSubnets&3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc

  NATGateway1:
    Condition: PrivateSubnets&3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NAT1EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet1
  NATGateway2:
    Condition: PrivateSubnets&3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NAT2EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet2
  NATGateway3:
    Condition: PrivateSubnets&3AZCondition
    DependsOn: VPCGatewayAttachment
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt 
        - NAT3EIP
        - AllocationId
      SubnetId: !Ref PublicSubnet3

  S3VPCEndpoint:
    Condition: PrivateSubnets&3AZCondition
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: '*'
            Effect: Allow
            Resource: '*'
            Principal: '*'
      RouteTableIds:
        - !Ref PrivateSubnet1RouteTable
        - !Ref PrivateSubnet2RouteTable
        - !Ref PrivateSubnet3RouteTable
      ServiceName: !Sub 'com.amazonaws.${AWS::Region}.s3'
      VpcId: !Ref VPC
Outputs:
  PrivateSubnet1ID:
    Condition: PrivateSubnets&3AZCondition
    Description: Private subnet 1 ID in Availability Zone 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet1AID'
  PrivateSubnet2ID:
    Condition: PrivateSubnets&3AZCondition
    Description: Private subnet 2 ID in Availability Zone 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet2ID'
  PrivateSubnet3ID:
    Condition: PrivateSubnets&3AZCondition
    Description: Private subnet 3 ID in Availability Zone 3
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnet3ID'
  PublicSubnet1ID:
    Condition: 3AZCondition
    Description: Public subnet 1 ID in Availability Zone 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet1ID'
  PublicSubnet2ID:
    Condition: 3AZCondition
    Description: Public subnet 2 ID in Availability Zone 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet2ID'
  PublicSubnet3ID:
    Condition: 3AZCondition
    Description: Public subnet 3 ID in Availability Zone 3
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnet3ID'
  VPCCIDR:
    Condition: 3AZCondition
    Value: !Ref VPCCIDR
    Description: VPC CIDR
    Export:
      Name: !Sub '${AWS::StackName}-VPCCIDR'
  VPCID:
    Condition: 3AZCondition
    Value: !Ref VPC
    Description: VPC ID
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'
